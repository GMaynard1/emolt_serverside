TRUNCATE cfrf_data_raw;
INSERT INTO cfrf_data_raw
  SELECT
  DEPTH_DATA.TOW_ID,
  DEPTH_DATA.VESSEL_ID,
  DEPTH_DATA.TIMESTAMP,
  DEPTH_DATA.LATITUDE,
  DEPTH_DATA.LONGITUDE,
  DEPTH_DATA.DEPTH,
  TOWS_ENV.TR_VALUE AS TEMP,
  EQUIPMENT_INVENTORY.SERIAL_NUMBER AS LOGGER_SERIAL
FROM
  EQUIPMENT_INVENTORY
  INNER JOIN
  TOW_SENSORS
  ON EQUIPMENT_INVENTORY.INVENTORY_ID=TOW_SENSORS.INVENTORY_ID
  INNER JOIN 
  TOWS
  ON TOW_SENSORS.TOW_ID = TOWS.TOW_ID
  INNER JOIN
  TOWS_POINTS
  ON TOWS.TOW_ID = TOWS_POINTS.TOW_ID
  INNER JOIN
  TOWS_ENV
  ON TOWS_POINTS.TOWS_POINTS_ID = TOWS_ENV.TOWS_POINTS_ID
  INNER JOIN
  (SELECT
    TOWS_POINTS.TOW_ID,
    TOWS_POINTS.TOWS_POINTS_ID,
    TOWS_POINTS.TIMESTAMP,
    TOWS_POINTS.LATITUDE,
    TOWS_POINTS.LONGITUDE,
    TOWS_ENV.TR_VALUE AS DEPTH,
    TOWS.VESSEL_ID
  FROM
    TOWS_POINTS
    INNER JOIN
      TOWS
      ON
      TOWS.TOW_ID=TOWS_POINTS.TOW_ID
      INNER JOIN
        TOWS_ENV
        ON
        TOWS_ENV.TOWS_POINTS_ID=TOWS_POINTS.TOWS_POINTS_ID
      INNER JOIN
        VESSELS
        ON
        VESSELS.VESSEL_ID=TOWS.VESSEL_ID
  WHERE TOWS_ENV.TR_PARAMETER="DEPTH" AND VESSELS.VESSEL_NAME LIKE "%CFRF%") AS DEPTH_DATA
  ON TOWS_ENV.TOWS_POINTS_ID=DEPTH_DATA.TOWS_POINTS_ID
  WHERE TOWS_ENV.TR_PARAMETER="TEMP";